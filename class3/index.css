

table {
    border-collapse: collapse;
}

.main-table tbody tr td, .main-table thead tr th {
    border: 1px solid black;
    padding: 20px
}

.main-table tbody tr.row1 {
    color: white;
    background-color: #2a4887;
}

.main-table tbody tr td.no-padding {
    padding: 0;
}

.main-table tbody tr td.no-padding {
    padding: 0;
}

.internal-table tbody tr td {
    border: 0;
}

.internal-table tbody tr td:first-child {
    border-left: 0;
    border-right: 1px solid black;
}

.internal-table tbody tr td {
    border-right: 1px solid black;
    border-left: 1px solid black;
}

.internal-table tbody tr td:last-child {
    border-right: 0;
    border-left: 1px solid black;
}


.element-container {
    width: 100%;
    border: 1px solid black;
    height: 100px;
}
/* Option 1 is the recommended one as it works in old browsers */
/* option 1 simulates that the content is inside of a table cell*/
.option1 .element-container {
    border: 1px solid black;
    height: 100px;
    display: table;
}

.option1 .element-container .element {
    vertical-align: middle;
    display: table-cell;
}

/* option 2 uses position absolute and transform
    position absolute and top 50% move the content to the middle
    but it doesn't take into account the height of the content.
    That's fixed when the transform: translateY(-50%) is applied.
*/
.option2 .element-container {
    position: relative;
}

.option2 .element-container .element {
    position: absolute;
    transform: translateY(-50%);
    top: 50%
}